{
  "author": {
    "name": "Andrew Dunkman",
    "email": "andrew@dunkman.org"
  },
  "name": "dynamic-reverse-proxy",
  "version": "0.6.0",
  "repository": {
    "url": "git://github.com/softek/dynamic-reverse-proxy.git"
  },
  "dependencies": {
    "http-proxy": "1.1.4"
  },
  "engines": {
    "node": "*"
  },
  "readme": "# dynamic-reverse-proxy\r\n\r\nA reverse proxy built on [http-proxy](https://github.com/nodejitsu/node-http-proxy) that is configured by REST.\r\n\r\n## Starting the server\r\n\r\n```javascript\r\nvar http = require(\"http\"),\r\n    server = http.createServer(),\r\n    dynamicProxy = require(\"dynamic-reverse-proxy\")();\r\n\r\nserver.on(\"request\", function (req, res) {\r\n  if (req.url.match(/^\\/register/i)) {\r\n    dynamicProxy.registerRouteRequest(req, res);\r\n  }\r\n  else {\r\n    dynamicProxy.proxyRequest(req, res);\r\n  }\r\n});\r\n\r\nserver.listen(3000, function () {\r\n  console.log(\"Reverse Proxy started, listening on port 3000\");\r\n});\r\n```\r\n\r\n## Configuring the proxy\r\n\r\nThe reverse proxy is configured to route based on the first segment of the path. For example:\r\n - `/` would route to the host registered at `/`\r\n - `/application1` would route to the host registered at `/application1`\r\n - `/application2/test/index.html` would route to the host registered at `/application2`\r\n\r\nTo register the a host with the proxy:\r\n\r\n```HTTP\r\nPOST /register HTTP/1.1\r\nHost: localhost:3000\r\nContent-Length: 28\r\nContent-Type: application/json\r\n\r\n{\"prefix\": \"/\", \"port\":1234}\r\n```\r\n\r\nNow, any request made to `http://localhost:3000/` will be sent to `http://localhost:1234/`.\r\n\r\nTo register another host:\r\n\r\n```HTTP\r\nPOST /register HTTP/1.1\r\nHost: localhost:3000\r\nContent-Length: 32\r\nContent-Type: application/json\r\n\r\n{\"prefix\": \"/test\", \"port\":4321}\r\n```\r\n\r\nNow, any request made to `http://localhost:3000/test` will be sent to `http://localhost:4321/test`.\r\n\r\n### Wait, what about security? \r\n\r\nWell, it's pretty lame (but functional) at the moment. Only requests originating from the same machine as the proxy are allowed to register.\r\n\r\n## Events\r\n\r\nThe dynamic proxy object that is returned is an EventEmitter with the following events:\r\n\r\n - `proxyError` is passed `(error, host, request, response)` and is emitted when:\r\n     - A request is sent to a known host but the request could not be proxied (likely the host was unreachable). If no handler ends the response back to the original client, `500 Internal Server Error` will be returned.\r\n     - No host could be found to handle the request. In this case, the `error` will be `NOT_FOUND`. If no handler ends the response back to the original client, `501 Not Implemented` will be returned.\r\n\r\n - `registerError` is passed `(error, request, response)` and is emitted when a request is sent to `/register` but it could not be handled correctly. Error will be one of the following:\r\n     - `FORBIDDEN` (not allowed)\r\n     - `METHOD_NOT_ALLOWED` (must be a POST)\r\n     - `BAD_REQUEST` (not parsable as JSON)\r\n     - `INCOMPLETE_REQUEST` (path and port were not supplied)\r\n\r\n - `routeRegistered` is passed `(host)` and is emitted when a request is sent to `/register` and it was successful.\r\n\r\n## Methods\r\n\r\n - `dynamicProxy.addRoutes(routes)` adds an object of routes in the following format:\r\n\r\n```JSON\r\n{\r\n   \"/\": {\r\n      \"prefix\": \"\",\r\n      \"port\": 1234\r\n   },\r\n   \"/test\": {\r\n      \"prefix\": \"test\",\r\n      \"port\": 4321\r\n   }\r\n}\r\n ```\r\n",
  "readmeFilename": "README.md",
  "description": "A reverse proxy built on [http-proxy](https://github.com/nodejitsu/node-http-proxy) that is configured by REST.",
  "bugs": {
    "url": "https://github.com/softek/dynamic-reverse-proxy/issues"
  },
  "_id": "dynamic-reverse-proxy@0.6.0",
  "dist": {
    "shasum": "b70616466b7af408fc37d3c37dbaf9cbf7b5fa78"
  },
  "_from": "dynamic-reverse-proxy@",
  "_resolved": "https://registry.npmjs.org/dynamic-reverse-proxy/-/dynamic-reverse-proxy-0.6.0.tgz"
}
