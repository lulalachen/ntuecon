{
  "name": "punt",
  "version": "2.2.0",
  "description": "tiny / elegant UDP messaging library",
  "keywords": [
    "message",
    "messaging",
    "udp"
  ],
  "devDependencies": {
    "mocha": "~1.9.0",
    "humanize-number": "0.0.1",
    "better-assert": "~1.0.0",
    "commander": "~1.1.1"
  },
  "dependencies": {
    "amp-message": "~0.1.1"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/visionmedia/punt.git"
  },
  "readme": "\n# Punt\n\n  A small layer on top of node's core __UDP__ module to make fast volatile messaging even simpler.\n  Punt uses the tiny [AMP](https://github.com/visionmedia/node-amp) prototol to serialize buffer, string,\n  and json arguments.\n\n## Installation\n\n```\n$ npm install punt\n```\n\n## Example\n\n  A small in-proc example of a server with three clients:\n\n```js\nvar punt = require('punt');\nvar server = punt.bind('0.0.0.0:5000');\nvar a = punt.connect('0.0.0.0:5000');\nvar b = punt.connect('0.0.0.0:5000');\nvar c = punt.connect('0.0.0.0:5000');\n\nserver.on('message', function(msg){\n  console.log(msg);\n});\n\nsetInterval(function(){\n  a.send({ hello: 'world' });\n}, 150);\n\nsetInterval(function(){\n  b.send('hello world');\n}, 150);\n\nsetInterval(function(){\n  c.send(new Buffer('hello'));\n}, 150);\n```\n\n  yielding:\n\n```\n<Buffer 68 65 6c 6c 6f>\nhello world\n{ hello: 'world' }\n<Buffer 68 65 6c 6c 6f>\nhello world\n{ hello: 'world' }\n...\n```\n## API\n\n### Server(addr)\n\n  Bind to the given `addr`.\n\n### Client(addr)\n\n  Connect to the given `addr`.\n\n### Client#send(...)\n\n  Send one or more arguments a single atomic message. The following\n  types are supported through AMP:\n\n  - strings\n  - buffers\n  - objects (serialized as JSON)\n\n## License\n\n  MIT\n",
  "readmeFilename": "Readme.md",
  "bugs": {
    "url": "https://github.com/visionmedia/punt/issues"
  },
  "_id": "punt@2.2.0",
  "_from": "punt@2.2.0"
}
